const core = require('@actions/core')

function validateFormat() {
  const format = core.getInput('format')
  if (format !== 'AmazonInspector') {
    core.setFailed(`Report format ${format} is not supported.`)
    return
  }
  return true
}

function parseReport() {
  return JSON.parse(core.getInput('report'))
}

function validateThreshold(report) {
  const vulnerabilityLevelCount = report['sbom']['vulnerability_count']
  const levels = ['low', 'medium', 'high', 'critical']
  const threshold = core.getInput('threshold')

  const relevantLevels = levels.slice(levels.indexOf(threshold), levels.length)

  const relevantVulnerabilityLevelCount = Object.fromEntries(
    Object.entries(vulnerabilityLevelCount).filter(([key]) =>
      relevantLevels.includes(key)
    )
  )

  const relevantVulnerabilityCount = Object.keys(
    relevantVulnerabilityLevelCount
  ).reduce(function (previous, key) {
    return previous + relevantVulnerabilityLevelCount[key]
  }, 0)

  if (relevantVulnerabilityCount > 0) {
    console.log(
      'Filtered vulnerability count by threshold: ',
      relevantVulnerabilityLevelCount
    )
    core.setFailed(
      `One or more vulnerabilities violate threshold (${relevantVulnerabilityCount}).`
    )
  }
}

async function run() {
  try {
    if (!validateFormat()) {
      return
    }

    const report = parseReport()

    validateThreshold(report)
  } catch (error) {
    core.setFailed(error.message)
  }
}

module.exports = {
  run
}
